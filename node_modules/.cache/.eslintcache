[{"C:\\Users\\sagar\\Downloads\\Projects\\simple-calculator\\src\\index.js":"1","C:\\Users\\sagar\\Downloads\\Projects\\simple-calculator\\src\\App.js":"2"},{"size":146,"mtime":1677417738202,"results":"3","hashOfConfig":"4"},{"size":7343,"mtime":1677418183450,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"9"},"c6i6yu",{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},"C:\\Users\\sagar\\Downloads\\Projects\\simple-calculator\\src\\index.js",[],[],[],"C:\\Users\\sagar\\Downloads\\Projects\\simple-calculator\\src\\App.js",["14"],[],"import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Button from \"@mui/material/Button\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\"; //importing button group { react material ui component }\n\nconst App = () => {\n  const [result, setResult] = useState(\"\");\n  const handleClick = (e) => {\n    setResult(result.concat(e.target.name));\n  };\n  const clear = () => {\n    setResult(\"\");\n  };\n  const backspace = () => {\n    setResult(result.slice(0, -1));\n  };\n  const calculate = () => {\n    // to do basic math operations\n    try {\n      setResult(eval(result).toString());\n    } catch (err) {\n      setResult(\"Syntax Error\");\n    }\n  };\n\n  const fact = (result) => {\n    if (result === 0) {\n      return 1;\n    } else if (result === 1) {\n      return 1;\n    } else if (result < 0) {\n      return \"Syntax Error\";\n    }\n    return result * fact(result - 1);\n  };\n  const inverse = (result) => {\n    if (result === 0) {\n      return Infinity;\n    } else return 1 / result;\n  };\n\n  return (\n    <div className=\"container\">\n      <p id=\"cpy\">\n        SASIO\n        <br />\n      </p>\n      <p id=\"modname\">SAG77</p>\n      <form>\n        <input type=\"text\" value={result} />\n      </form>\n      {/* built in js math methods to do advance math operation */}\n      <div className=\"sfun\">\n        {/* Make use of ButtonGroup tag to group buttons */}\n        <ButtonGroup variant=\"text\" size=\"small\" aria-label=\"text button group\">\n          <button\n            name=\"sin\"\n            size=\"small\"\n            onClick={() => setResult(Math.sin(result).toString())}\n          >\n            sin\n          </button>\n          <button\n            name=\"cos\"\n            size=\"small\"\n            onClick={() => setResult(Math.cos(result).toString())}\n          >\n            cos\n          </button>\n          <button\n            name=\"tan\"\n            size=\"small\"\n            onClick={() => setResult(Math.tan(result).toString())}\n          >\n            tan\n          </button>{\" \"}\n        </ButtonGroup>\n        <ButtonGroup variant=\"text\" size=\"small\" aria-label=\"text button group\">\n          <button\n            name=\"sinh\"\n            size=\"small\"\n            onClick={() => setResult(Math.sinh(result).toString())}\n          >\n            sinh\n          </button>\n          <button\n            name=\"cosh\"\n            size=\"small\"\n            onClick={() => setResult(Math.cosh(result).toString())}\n          >\n            cosh\n          </button>\n          <button\n            name=\"tanh\"\n            size=\"small\"\n            onClick={() => setResult(Math.tanh(result).toString())}\n          >\n            tanh\n          </button>\n        </ButtonGroup>\n        <ButtonGroup variant=\"text\" size=\"small\" aria-label=\"text button group\">\n          <button\n            name=\"sqrt\"\n            size=\"small\"\n            onClick={() => setResult(Math.sqrt(result).toString())}\n          >\n            √\n          </button>\n          <button\n            name=\"inverse\"\n            size=\"small\"\n            onClick={() => setResult(inverse(result).toString())}\n          >\n            x<sup>-1</sup>\n          </button>\n          <button\n            name=\"log\"\n            size=\"small\"\n            onClick={() => setResult(Math.log10(result).toString())}\n          >\n            log\n          </button>\n          <button\n            name=\"ln\"\n            size=\"small\"\n            onClick={() => setResult(Math.log(result).toString())}\n          >\n            ln\n          </button>\n          <button\n            name=\"square\"\n            size=\"small\"\n            onClick={() => setResult(Math.pow(result, 2).toString())}\n          >\n            x<sup>2</sup>\n          </button>\n          <button\n            name=\"cube\"\n            size=\"small\"\n            onClick={() => setResult(Math.pow(result, 3).toString())}\n          >\n            x<sup>3</sup>\n          </button>\n        </ButtonGroup>\n        <ButtonGroup variant=\"text\" size=\"small\" aria-label=\"text button group\">\n          <button\n            name=\"pi\"\n            size=\"small\"\n            onClick={() => setResult(result.concat(Math.PI.toString()))}\n          >\n            π\n          </button>\n          <button\n            name=\"e\"\n            size=\"small\"\n            onClick={() => setResult(Math.E.toString())}\n          >\n            e\n          </button>\n          <button\n            name=\"factorial\"\n            size=\"small\"\n            onClick={() => setResult(fact(result).toString())}\n          >\n            x!\n          </button>\n          <button\n            name=\"d/dx\"\n            size=\"small\"\n            onClick={() => setResult(Math.derivative(result).toString())}\n          >\n            ∂/∂x\n          </button>\n          <button\n            name=\"integrate\"\n            size=\"small\"\n            onClick={() => setResult(Math.integrate(result).toString())}\n          >\n            ∫\n          </button>\n        </ButtonGroup>\n      </div>\n\n      <div className=\"keypad\">\n        {/* make use of material-ui button component */}\n        <Button\n          variant=\"outlined\"\n          size=\"small\"\n          color=\"secondary\"\n          onClick={clear}\n          id=\"clear\"\n        >\n          Clear\n        </Button>\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          onClick={backspace}\n          id=\"backspace\"\n        >\n          C\n        </Button>\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          name=\"/\"\n          onClick={handleClick}\n        >\n          &divide;\n        </Button>\n        <Button variant=\"outlined\" name=\"7\" onClick={handleClick}>\n          7\n        </Button>\n        <Button variant=\"outlined\" name=\"8\" onClick={handleClick}>\n          8\n        </Button>\n        <Button variant=\"outlined\" name=\"9\" onClick={handleClick}>\n          9\n        </Button>\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          name=\"*\"\n          onClick={handleClick}\n        >\n          &times;\n        </Button>\n        <Button variant=\"outlined\" name=\"4\" onClick={handleClick}>\n          4\n        </Button>\n        <Button variant=\"outlined\" name=\"5\" onClick={handleClick}>\n          5\n        </Button>\n        <Button variant=\"outlined\" name=\"6\" onClick={handleClick}>\n          6\n        </Button>\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          name=\"-\"\n          onClick={handleClick}\n        >\n          &ndash;\n        </Button>\n        <Button variant=\"outlined\" name=\"1\" onClick={handleClick}>\n          1\n        </Button>\n        <Button variant=\"outlined\" name=\"2\" onClick={handleClick}>\n          2\n        </Button>\n        <Button variant=\"outlined\" name=\"3\" onClick={handleClick}>\n          3\n        </Button>\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          name=\"+\"\n          onClick={handleClick}\n        >\n          +\n        </Button>\n        <Button variant=\"outlined\" name=\"0\" onClick={handleClick}>\n          0\n        </Button>\n        <Button variant=\"outlined\" name=\".\" onClick={handleClick}>\n          .\n        </Button>\n        <Button\n          variant=\"outlined\"\n          color=\"success\"\n          onClick={calculate}\n          id=\"result\"\n        >\n          =\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n",{"ruleId":"15","severity":1,"message":"16","line":20,"column":17,"nodeType":"17","messageId":"18","endLine":20,"endColumn":21},"no-eval","eval can be harmful.","CallExpression","unexpected"]